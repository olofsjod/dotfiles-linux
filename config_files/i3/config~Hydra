# i3 config for Hydra
# by Olof Sjödin <me@olofsjodin.se> 2017-2024
# last modified 2024-05-09
# ===========================================
#
# This is my i3 config on my main battlestation. Remember that to be able to run
# this config you need additional dependencies.
#
# In the moment of writing the conditionally optional dependencies are:
#
# - To use the media keys such as mute, raising/decreasing volume: amixer

# - Status bar fonts: Tamzen and FontAwesome
#   $ git clone git@github.com:sunaku/tamzen-font.git ~/.fonts/tamzen-font
#   $ xset +fp ~/.fonts/tamzen-font/bdf
#   $ xset fp rehash
#   sudo apt install fonts-font-awesome
# - Status bar: bumblebee-status
# - Program launcher: rofi
#   $ sudo apt install rofi
#
# - kbd-layout-toggle.py to change between dvorak and qwerty (https://github.com/olofsjod/kbd-layout-toggle)

# Thoughts and philosophy about this config.
# ------------------------------------------
#
# I've organized this configuration into seven parts in the following order:
#
# 1. Global variables
# 2. Fonts
# 3. Bindings
# 4. Rules for moving windows to their workspace
# 5. Window rules (floating, tiling etc)
# 6. Status bar
# 7. Autostart
#
# The global variables includes the definitions of the names of each workspace
# where the variable name reflect what the workspace. To change the workspace
# key binding location you need to go to "Bindings" and change the number it
# points to at "switch to workspace" and "move focused container to workspace".
# While it is not required it might be a good idea to change the number at
# "Global variables" as well to avoid confusion. I would love make this change
# easier to do, but as for now it is what and it is unlikely that I will. But if
# I would decide to do it then I would rename the variables and make them
# independent on the type of workspace it is. This is because you can't nest
# variables in ".i3/config".
#
# Happy hacking!

## Set global variables
#
# WARNING: This MUST be set before the others as they use the
# variables set here.
#
# There are probably better ways to do this. Maybe macros?

# Using the windows button as master key
set $mod Mod4

# Set paths
set $path_to_bumblebee ~/.i3/bumblebee-status/bumblebee-status
set $path_to_kbd_layout_toggle ~/.i3/kbd-layout-toggle/kbd-layout-toggle.py
set $path_to_scrot_screenshots /home/olof/MEGA/Screenshots/

# Set workspace names
# Web
set $ws_one 1 

# Chat + Mail
set $ws_one_ctrl 1c 

# Creative
set $ws_two 2 

# Music
set $ws_three 3 

# Word/Excel/PDF
set $ws_four 4   

# Terminal
set $ws_five 5 

# (Unassigned)
set $ws_six 6

# Dev (Emacs)
set $ws_seven 7 

# Terminal 2
set $ws_eight 8 

# Game/Steam
set $ws_nine 9 

# Files
set $ws_ten 10 

## Set the font
# 
# Example:
# font pango:DejaVu sans, FontAwesome 10
#
# DejaVu sans has higher priority than FontAwesome, both with the same
# font size and it isn't possible to set font size per font.
font pango:DejaVu Sans Mono, FontAwesome 12

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# No titlebar
#new_window 1pixel

focus_follows_mouse no

## Bindings

# start a terminal
bindsym $mod+Return exec gnome-terminal

# start emacs
bindsym $mod+Shift+Return exec emacsclient -c -a 'emacs'

# kill focused window
bindsym $mod+w kill

# start rofi (THE program launcher)
bindsym $mod+d exec "rofi -combi-modi window,drun,run -show combi -modi combi"

# change focus
bindsym $mod+b focus left
bindsym $mod+n focus down
bindsym $mod+p focus up
bindsym $mod+f focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+b move left
bindsym $mod+Shift+n move down
bindsym $mod+Shift+p move up
bindsym $mod+Shift+f move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+shift+m fullscreen
bindsym $mod+m exec python3 $path_to_kbd_layout_toggle --toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+shift+s layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+shift+c focus parent

# focus the child container
bindsym $mod+c focus child

# switch to workspace
bindsym $mod+1 workspace $ws_one
bindsym $mod+Ctrl+1 workspace $ws_one_ctrl

bindsym $mod+2 workspace $ws_two
bindsym $mod+3 workspace $ws_three
bindsym $mod+4 workspace $ws_four
bindsym $mod+5 workspace $ws_five
bindsym $mod+6 workspace $ws_six
bindsym $mod+7 workspace $ws_seven
bindsym $mod+8 workspace $ws_eight
bindsym $mod+9 workspace $ws_nine
bindsym $mod+0 workspace $ws_ten

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws_one
bindsym $mod+Ctrl+Shift+1 move container to workspace $ws_one_ctrl

bindsym $mod+Shift+2 move container to workspace $ws_two
bindsym $mod+Shift+3 move container to workspace $ws_three
bindsym $mod+Shift+4 move container to workspace $ws_four
bindsym $mod+Shift+5 move container to workspace $ws_five
bindsym $mod+Shift+6 move container to workspace $ws_six
bindsym $mod+Shift+7 move container to workspace $ws_seven
bindsym $mod+Shift+8 move container to workspace $ws_eight
bindsym $mod+Shift+9 move container to workspace $ws_nine
bindsym $mod+Shift+0 move container to workspace $ws_ten

# reload the configuration file
bindsym $mod+o reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+x open

# move focused workspace between monitors
bindsym $mod+Shift+greater move workspace to output right
bindsym $mod+less move workspace to output left

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym b resize shrink width 10 px or 10 ppt
        bindsym p resize grow height 10 px or 10 ppt
        bindsym n resize shrink height 10 px or 10 ppt
        bindsym f resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

bindsym $mod+shift+x exec i3lock -c 000000

# These binds the media keys to their respective action

bindsym --release Print exec scrot 'Screenshot %Y-%m-%d %H.%M.%S.png' -e 'mv "$f" "$path_to_scrot_screenshots"'

# fixme, change it to MEGA
# bindsym --release Shift+Print exec scrot -s 'Screenshot %Y-%m-%d %H.%M.%S.png' -e 'mv "$f" ~/Dropbox/Screenshots/ && dropbox sharelink ~/Dropbox/Screenshots/$f | xclip -r && notify-send Screenshot "A sharable link to your screenshot is now available in your clipboard." '

# dropbox sharelink ~/Dropbox/Screenshots/$f | xclip -r && 

# i3 gaps
#gaps inner 5

bindsym button4 nop
bindsym button5 nop

## Organize applications by moving them to their workspaces

# Web
assign [class="Chrome"] $ws_one
assign [class="Firefox"] $ws_one

# Chat
assign [class="Element"] $ws_one_ctrl
assign [class="Discord"] $ws_one_ctrl

# Creative and stuff
assign [class="Blender"] $ws_two

# Music
assign [class="Spotify"] $ws_three

# Documents
assign [class="Libreoffice"] $ws_four
assign [class="evince"] $ws_four

# Terminals
assign [class="gnome-terminal"] $ws_seven

# Dev
assign [class="emacs"] $ws_eight

# Games
assign [class="Steam"] $ws_nine

# Files
assign [class="Sunflower"] $ws_ten

## Make window rules
#
# Examples:
# for_window [class="Firefox"] floating enable
# for_window [class="URxvt" workspace="(?!8)"] floating enable
# for_window [class="Pidgin"] floating enable

for_window [class="^MATLAB"] floating enable
for_window [class="Steam"] floating enable
for_window [class="Makie"] floating enable

## The status bar configuration

# Define colors
set $darkblack	#073642
set $darkblue	  #073642
set $white	    #eee8d5
set $black	#002b36
set $darkred	#dc322f
set $brcyan	#93a1a1
set $brblue	#839496
set $bryellow	#657b83

# Window colors           border      background   text            indicator   child_border
client.focused            $bryellow   $bryellow    $white          $darkblue   $darkblack
client.focused_inactive   $darkblack  $darkblack   $white          $darkblack  $darkblack
client.unfocused          $darkblack  $darkblack   $white          $darkblack  $darkblack
client.urgent             $darkblack  $darkblack   $white          $darkblack  $darkblack

#new_window normal 4 px
set $monitor_one DP-2
set $monitor_two HDMI-0

bar {
    # 1920x1080 screen
    output          $monitor_one
    mode            dock
    position 		    top
    status_command 	$path_to_bumblebee -m sl tibber layout datetime -p sl.api_key="9034465cc63d4311b027fbc4f1680467" sl.site_id="9263" sl.line_number="14" sl.journey_direction="1" sl.time_window="20" datetime.format="kl %k:%M | %d %b (%a) W:%V" tibber.access_token="ga8zGwJ4LoEgjXzcctY5jqq8HWvA1HVm3V1rnUxFOC4" -t solarized-powerline

    tray_output		primary
    colors {
    	     background $black
           statusline #33aaff
	   
      	   # <colorclass>	<border>	<background>	<text>
	         focused_workspace	$bryellow	$bryellow	$white
           active_workspace 	$darkblue 	$darkblue 	$white
	         inactive_workspace 	$black 		$black		$brblue
 	         urgent_workspace 	$darkred	$darkblack	$white
	   
    }
}

bar {
    # 4k screen to the right
    output          $monitor_two
    mode            dock
    position 		    bottom
    status_command 	$path_to_bumblebee -m nic memory load datetime -p datetime.format="kl %k:%M | %d %b (%a) W:%V" -t solarized-powerline

    colors {
    	     background $black
           statusline #33aaff
	   
      	   # <colorclass>           <border>      <background>	<text>
	         focused_workspace	      $bryellow	    $bryellow	    $white
           active_workspace 	      $darkblue 	  $darkblue 	  $white
	         inactive_workspace 	    $black 		    $black		    $brblue
 	         urgent_workspace 	      $darkred	    $darkblack	  $white
	   
    }
}

# Bind workspace to monitor
workspace "$ws_seven" output $monitor_one
workspace "$ws_eight" output $monitor_one
 
# Commands to be run at start of i3

## Emacs daemon
exec emacs --daemon

## Setup layout
exec ~/bin/normal-mode.sh

## Enable Svorak
exec setxkbmap se -layout dvorak

## Disable Caps-Lock
exec setxkbmap -option caps:none

exec --no-startup-id eval $(/usr/bin/gnome-keyring-daemon --start --components=pkcs11,secrets,ssh)
#exec compton
exec sh ~/.fehbg			            # Sets background
exec dunst				                # Start notification daemon
exec pasystray				            # Start PulseAudio systray
exec --no-startup-id nm-applet		# Start Network Manager systray

#exec conky				
#exec mpd
#exec dropbox start

# Hack to start mega in background
exec megasync && megasync

# Locks computer after 30 minutes
exec xautolock -time 30 -locker "i3lock -c 000000"

# Mount all
exec sshfs olof@laser.olof.app:/home/olof/ /home/olof/Mount/laser/
exec sshfs olof@192.168.1.105:/mnt /home/olof/Mount/fatboy/

# i3 gaps

gaps inner 10px
gaps outer 20px

